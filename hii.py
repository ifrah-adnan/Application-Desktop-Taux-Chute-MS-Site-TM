# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'hii.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QMainWindow, QTableWidget, QTableWidgetItem, QPushButton
from PyQt5.QtWidgets import QApplication, QMessageBox
from functools import partial
from tstt import Ui_Tab1

import sqlite3

dic_ep=dict()

dic_ep['0.24<<0.4']='1.8<<2'
dic_ep['0.33<<0.6']='2<<2.2'
dic_ep['0.45<<0.9']='2.2<<2.4'
dic_ep['0.6<<1.2']='2.4<<2.7'
dic_ep['0.7<<1.3']='2.7<<3'
dic_ep['1<<1.6']='3<<3.4'
dic_ep['1.4<<1.75']='3.4<<3.6'
dic_ep['1.6<<4']='3.6<<8'





#----------------------------------------------------------

dic_lg=dict()

dic_lg['910_912']='935<<940'
dic_lg['980']='1005<<1010'
dic_lg['1000']='1025<<1030'
dic_lg['1059_1060_1065']='1090'
dic_lg['1070']='1095<<1100'
dic_lg['1100']='1125<<1130'
dic_lg['1160_1165']='1190'
dic_lg['1200']='1225<<1230'
dic_lg['1206']='1240'
dic_lg['1210']='1235<<1240'
dic_lg['1219_1220']='1245<<1250'
dic_lg['1250']='1275<<1280'
dic_lg['1260']='1285<<1290'
dic_lg['1294']='1320'



dic_pro =dict()
dic_pro["LAC"]=["PK"]
dic_pro["GAL"]=["PK","CRMA","LGA"]
dic_pro["PPO"]=["PK","CRMA","LGA"]
dic_pro["LAF"]=["PK","CRMB","BAF","SKP"]
dic_pro["CA"]=["PK","CRMA","LGB"]










connection = sqlite3.connect('dbbase.db')
cur = connection.cursor()
class Ui_Hii(object):
    
   

   
    def setupUi(self, MainWindow , epaisseur,largeur,process):
      
        
        
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(797, 900)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(60, 70, 700, 350))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(4)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        
       
       
           

        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(200, 300, 251, 41))
        self.label.setObjectName("label")
        

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 18))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        
        ep_stock=[]
        for key in dic_ep.keys():
              if '<<' in key:
                   lst=key.split('<<')
                   if float(lst[0])<=float(epaisseur)<=float(lst[1]):
                        print(dic_ep[key])

                        ep_stock.append(dic_ep[key])

              else:
                   if float(key)==float(epaisseur):
                        ep_stock.append(dic_ep[key])

                        print(dic_ep[key])
        for key in dic_lg.keys():
              if '_' in key:
                   lst=key.split('_')
                  
                   for lg in lst:
                        if float(lg)==float(largeur):
                             lg_stock=dic_lg[key]
                             break

               

              else:
                   if float(key)==float(largeur):
                        lg_stock=dic_lg[key]
                        print(dic_lg[key])                
        print("this is ep stock")
        print(ep_stock )
        
                     
        
        
        if '<<' in lg_stock:
              lst=lg_stock.split('<<')
              lg_inferieur=lst[0]
              lg_superieur=lst[1]
              print (lg_inferieur)
              print(lg_superieur)
        else:
             lg_inferieur=lg_stock
             lg_superieur=lg_stock
             
        self.tableWidget.setRowCount(0)
        for ep_interv in ep_stock:     
            if '<<' in ep_interv:
                lst=ep_interv.split('<<')
                ep_inferieur=lst[0]
                ep_superieur=lst[1]
                print (ep_inferieur)
                print(ep_superieur)      

                query="select * from stock where epaisseur >='"+ep_inferieur+"'and epaisseur<='"+ep_superieur + "' and largeur>='"+lg_inferieur+"'and largeur<='"+lg_superieur+"'"
                tablerow=0
                results = cur.execute(query)
                ii=0
                for row_number, row_data in enumerate(results):
                    ii=ii+1
                    self.tableWidget.insertRow(row_number)
                    for column_number,data in enumerate(row_data):
                        self.tableWidget.setItem(row_number, column_number,QtWidgets.QTableWidgetItem(str(data)))
                for row in range(self.tableWidget.rowCount()):
                    button = QPushButton('Cliquez ici')
                    self.tableWidget.setCellWidget(row, 3, button)
                  
                    infos=[row,process,epaisseur,largeur]
                    button.clicked.connect(lambda _,r=infos:self.next(r))
                    


                    

                    
     
       
             
         
        

           
        
         
        
        if self.tableWidget.rowCount()==0:
          app = QApplication(sys.argv)

          messageBox = QMessageBox()
          messageBox.setIcon(QMessageBox.Warning)



          messageBox.setText("À produire")
          messageBox.setWindowTitle("Message")
          messageBox.setStandardButtons(QMessageBox.Ok)
          messageBox.resize(400, 300)  # définit la taille de la boîte de dialogue
          messageBox.exec_()
             
             

        

        # tablerow=0
        # results = cur.execute(query)
        # self.tableWidget.setRowCount(0)
        # for row_number, row_data in enumerate(results):
        #     self.tableWidget.insertRow(row_number)
        #     for column_number,data in enumerate(row_data):
        #         self.tableWidget.setItem(row_number, column_number,QtWidgets.QTableWidgetItem(str(data)))
        
        # for row in range(self.tableWidget.rowCount()):
        #             button = QPushButton('choose command')
        #             self.tableWidget.setCellWidget(row, 5, button)
        #             button.clicked.connect(lambda _,r=row:self.nextpage(r))
      

        



        
    def next(self,infos):
          print(infos,"  :this is infos") 
         
          row=infos[0]
          process=infos[1]
          epaisseur_comm=infos[2]
          largeur_comm=infos[3]
         
          print(process)   
          epaisseur=self.tableWidget.item(int(row), 0).text()
          largeur=self.tableWidget.item(int(row),  1).text()
             

         
         
         
          self.tab1= QtWidgets.QMainWindow()

          self.ui = Ui_Tab1()
          self.ui.setupUi(self.tab1,dic_pro[process],epaisseur,largeur,epaisseur_comm,largeur_comm)
          self.tab1.show()
     
     
             
     
        
            

               





          
         


         
        
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "epaisseur"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "largeur"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "grade"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "tableau"))
       


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_Hii()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
